#!/bin/sh

# read arguments, valid arguments are:
# - patch
# - minor
# - major

# if no argument is provided, cancel the release
if [ -z "$1" ]; then
  echo "Please provide a valid argument: patch, minor or major"
  exit 1
fi

# check if the argument is valid
if [ "$1" != "patch" ] && [ "$1" != "minor" ] && [ "$1" != "major" ]; then
  echo "Please provide a valid argument: patch, minor or major"
  exit 1
fi

# Ensure we're on the main branch
current_branch=$(git rev-parse --abbrev-ref HEAD)
if [ "$current_branch" != "main" ]; then
  echo "Error: You are on the '$current_branch' branch. Please switch to 'main' to release."
  exit 1
fi

# check if the branch is clean
if [ -n "$(git status --porcelain)" ]; then
  echo "Please commit all your changes before releasing"
  exit 1
fi

# check if the branch is up to date
git fetch
if [ -n "$(git log HEAD..origin/main --oneline)" ]; then
  echo "Please pull the latest changes before releasing"
  exit 1
fi

# Confirm before proceeding
read -p "Are you sure you want to bump the version, release, and publish? (y/n): " confirm
if [ "$confirm" != "y" ]; then
  echo "Release canceled."
  exit 0
fi

argument=$1

# Install dependencies
echo "Installing dependencies..."
npm install
if [ $? -ne 0 ]; then
  echo "Error: npm install failed. Please fix and try again."
  exit 1
fi

# Run the build
echo "Running build..."
npm run build
if [ $? -ne 0 ]; then
  echo "Error: build failed. Please fix and try again."
  exit 1
fi

# Check if package-lock.json has changed
if [ -n "$(git status --porcelain | grep 'package-lock.json')" ]; then
  echo "package-lock.json has changed, committing the change..."
  git add package-lock.json
  git commit -m "chore: update package-lock.json after build"
fi

# Bump the version based on the argument
echo "Bumping the version with $argument..."
if [ "$argument" = "patch" ]; then
   npm version patch
elif [ "$argument" = "minor" ]; then
   npm version minor
elif [ "$argument" = "major" ]; then
   npm version major
fi

if [ $? -ne 0 ]; then
  echo "Error: npm version bump failed."
  exit 1
fi

# Push changes and tags to the remote
echo "Pushing changes and tags to remote..."
git push origin --follow-tags
if [ $? -ne 0 ]; then
  echo "Error: Failed to push changes."
  exit 1
fi

# Publish the package to npm
echo "Publishing the package to npm..."
npm publish
if [ $? -ne 0 ]; then
  echo "Error: npm publish failed. Please check your npm authentication and package settings."
  exit 1
fi

# Merge changes from main into develop
echo "Merging changes from main into develop..."

# Switch to develop branch
git checkout develop
if [ $? -ne 0 ]; then
  echo "Error: Failed to switch to develop branch."
  exit 1
fi

# Merge main into develop
git merge main
if [ $? -ne 0 ]; then
  echo "Error: Merge conflict or failure. Resolve conflicts and try again."
  exit 1
fi

# Push changes to develop
git push origin develop
if [ $? -ne 0 ]; then
  echo "Error: Failed to push changes to develop."
  exit 1
fi

echo "Release and publish process complete. Changes merged into develop."
